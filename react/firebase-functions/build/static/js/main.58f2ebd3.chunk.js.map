{"version":3,"sources":["components/TimesList.jsx","components/TimeForm.jsx","pages/Home.jsx","pages/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimesList","useState","times","setTimes","useEffect","unsubscribe","firebase","firestore","collection","where","auth","currentUser","uid","onSnapshot","querySnapshot","newTimes","forEach","doc","push","id","data","getWeather","weather","metric","temperature","sky","parseInt","map","time","className","height","width","src","imageUrl","title","location","time_seconds","onClick","imagePath","delete","storage","ref","TimeForm","setTitle","setTime","setLocation","file","setFile","onSubmit","e","preventDefault","add","user_id","then","timesRef","filePath","name","put","snapshot","getDownloadURL","downloadURL","update","metadata","fullPath","type","value","onChange","currentTarget","accept","target","files","Home","displayName","signOut","Login","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","firebaseAuth","App","signedIn","setSignedIn","onAuthStateChanged","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","measurementId","window","hostname","useEmulator","functions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58f2ebd3.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport firebase from \"firebase/app\";\n\nconst DEFAULT_IMAGE = \"https://icons-for-free.com/iconfiles/png/512/clock+minute+time+timer+watch+icon-1320086045717163975.png\";\n\nconst TimesList = () => {\n  const [times, setTimes] = useState([]);\n\n  useEffect(() => {\n    const timesRef = firebase.firestore().collection(\"times\").where(\"user_id\", \"==\", firebase.auth().currentUser.uid);\n    var unsubscribe = timesRef.onSnapshot((querySnapshot) => {\n      var newTimes = [];\n      querySnapshot.forEach((doc) => {\n        newTimes.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setTimes(newTimes);\n    });\n    return () => unsubscribe();\n  },[]);\n\n  const handleDelete = (id, imagePath) => {\n      firebase.firestore().collection(\"times\").doc(id).delete();\n      firebase.storage().ref(imagePath).delete();\n  }\n\n  const getWeather = weather => {\n    if (!weather) return;\n    const metric = weather.metric === \"celsius\" ? \"°C\" : \"°F\";\n    return weather.temperature ? weather.sky + \" \" + parseInt(weather.temperature) + metric : \"-\";\n  }\n\n  return (\n      <div>\n          <h2>Times List</h2>\n          <ol>\n              {times.map(time => (\n                  <li key={time.id}>\n                      <div className=\"time-entry\">\n                        <span><img height=\"50\" width=\"50\" src={time.imageUrl || DEFAULT_IMAGE} /></span>\n                        <span>{time.title}</span>\n                        <span>{time.location}</span>\n                        <span>{getWeather(time.weather)}</span>\n                        <code className=\"time\">{time.time_seconds}</code>\n                        <button onClick={() => handleDelete(time.id, time.imagePath)}>Delete</button>\n                      </div>\n                  </li>\n              ))}\n          </ol>\n      </div>\n  );\n};\n\nexport default TimesList;","import { useState } from 'react';\nimport firebase from \"firebase/app\";\n\nconst LOADING_IMAGE_URL = \"https://www.google.com/images/spin-32.gif?a\";\n\nconst TimeForm = () => {\n    const [title, setTitle] = useState();\n    const [time, setTime] = useState();\n    const [location, setLocation] = useState();\n    const [file, setFile] = useState();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        firebase\n        .firestore()\n        .collection(\"times\")\n        .add({\n            title, \n            time_seconds: parseInt(time),\n            location,\n            imageUrl: !!file ? LOADING_IMAGE_URL : null,\n            user_id: firebase.auth().currentUser.uid\n        })\n        .then((timesRef) => {\n            setTitle(\"\");\n            setLocation(\"\");\n            setTime(\"\");\n            if(!file) return;\n            const filePath = firebase.auth().currentUser.uid + \"/\" + timesRef.id + \"/\" + file.name;\n            return firebase.storage().ref(filePath).put(file).then((snapshot) => {\n              return snapshot.ref.getDownloadURL().then((downloadURL) => {\n                return timesRef.update({\n                    imageUrl: downloadURL,\n                    imagePath: snapshot.metadata.fullPath\n                });\n              });\n            });\n        });\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h4>Add Time Entry</h4>\n            <div>\n                <label>Title</label>\n                <input type=\"text\" value={title} onChange={e => setTitle(e.currentTarget.value)} />\n            </div>\n            <div>\n                <label>Time</label>\n                <input type=\"number\" value={time} onChange={e => setTime(e.currentTarget.value)} />\n            </div>\n            <div>\n                <label>Location</label>\n                <input type=\"text\" value={location} onChange={e => setLocation(e.currentTarget.value)} />\n            </div>\n            <div>\n                <label>Image</label>\n                <input type=\"file\" accept=\"image/*\" onChange={e => setFile(e.target.files[0])} />\n            </div>\n            <button>Add Time Entry</button>\n        </form>\n    )\n};\n\nexport default TimeForm;","import firebase from \"firebase\";\n\nimport TimeList from \"../components/TimesList\";\nimport TimeForm from \"../components/TimeForm\";\n\nfunction Home() {\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Welcome to Time Tracker, {firebase.auth().currentUser.displayName}!</h1>\n        <button onClick={() => firebase.auth().signOut()}>Sign out</button>\n      </div>\n      <TimeList />\n      <TimeForm />\n    </>\n  );\n}\n\nexport default Home;\n","import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from \"firebase\";\n\nconst Login = () => {\n    // Configure FirebaseUI.\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  return (\n      <>\n        <h1>Time Tracker</h1>\n        <p>Please sign-in:</p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </>\n  )\n};\n\nexport default Login;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport firebase from \"firebase\";\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\n\nfunction App() {\n  const [signedIn, setSignedIn] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setSignedIn(!!user);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {signedIn ? <Home /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBY0y7adhWArVXBiFeyCvw0i5VV5RHzOwo\",\n  authDomain: \"time-entries-12b5d.firebaseapp.com\",\n  projectId: \"time-entries-12b5d\",\n  storageBucket: \"time-entries-12b5d.appspot.com\",\n  messagingSenderId: \"705048205294\",\n  appId: \"1:705048205294:web:ab1468dbfa3a99450560ff\",\n  databaseURL: \"https://time-entries-12b5d-default-rtdb.firebaseio.com/\",\n  measurementId: \"G-CP628CHRQB\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nif (window.location.hostname === \"localhost\") {\n  var db = firebase.firestore();\n  db.useEmulator(\"localhost\", 8080);\n  \n  const auth = firebase.auth();\n  auth.useEmulator(\"http://localhost:9099\");\n\n  var storage = firebase.storage();\n  storage.useEmulator(\"localhost\", 9199);\n\n  firebase.functions().useEmulator(\"localhost\", 5001);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}